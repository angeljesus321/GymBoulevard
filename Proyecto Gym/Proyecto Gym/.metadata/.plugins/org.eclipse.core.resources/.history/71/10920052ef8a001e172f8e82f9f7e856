package com.boulevard.fitness.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;

import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;

import com.boulevard.fitnes.validaciones.ClienteRequest;
import com.boulevard.fitness.entidades.Clase;
import com.boulevard.fitness.entidades.Cliente;
import com.boulevard.fitness.entidades.Documento;
import com.boulevard.fitness.entidades.Membresia;
import com.boulevard.fitness.repository.ClienteReporsitory;

import jakarta.validation.Valid;
import lombok.AllArgsConstructor;

import java.util.List;


@RestController
@AllArgsConstructor
@RequestMapping("/clientes")
public class ClienteController {

	@Autowired
	ClienteReporsitory clienteRepo;
	
	 @GetMapping("/listar")
	    public List<Cliente> listarClientes() {
	        return clienteRepo.findAll();
	    }

	// REGISTRAR
	 @PostMapping("/registrar")
	 @ResponseStatus(code = HttpStatus.CREATED)
	 public ResponseEntity<Cliente> register(@RequestBody @Valid ClienteRequest clienteRequest) {
	     Cliente cliente = new Cliente();
	     cliente.cod_cli = clienteRequest.cod_cli;
	     cliente.nom_cli = clienteRequest.nom_cli;
	     cliente.telf_cli = clienteRequest.telf_cli;
	     cliente.correo_cli = clienteRequest.correo_cli;
	     cliente.fecha_inicio = clienteRequest.fecha_inicio;
	     cliente.fecha_fin = clienteRequest.fecha_fin;

	     // Crea instancias de Clase, Membresia y Documento con solo el ID
	     Clase clase = new Clase();
	     clase.setId(clienteRequest.tipo_clase());

	     Membresia membresia = new Membresia();
	     membresia.setId(clienteRequest.getTipo_membresiaId());

	     Documento documento = new Documento();
	     documento.setId(clienteRequest.getTipo_documentoId());

	     // Asigna las instancias a Cliente
	     cliente.tipo_clase = clase;
	     cliente.tipo_membresia = membresia;
	     cliente.tipo_documento = documento;

	     Cliente clienteRegistrado = clienteRepo.save(cliente);

	     return new ResponseEntity<>(clienteRegistrado, HttpStatus.CREATED);
	 }

	
}
